"""base restaurant schema

Revision ID: ba6994c86866
Revises: 
Create Date: 2025-10-15 19:31:50.525494

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ba6994c86866'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('modifier_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('min_choices', sa.Integer(), nullable=True),
    sa.Column('max_choices', sa.Integer(), nullable=True),
    sa.Column('required', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('contact', sa.String(length=160), nullable=True),
    sa.Column('phone', sa.String(length=40), nullable=True),
    sa.Column('email', sa.String(length=160), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=16), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('_password_hash', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(length=120), nullable=True),
    sa.Column('last_name', sa.String(length=120), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('is_owner_admin', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('deactivated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_last_login_at'), ['last_login_at'], unique=False)

    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('line1', sa.String(length=255), nullable=False),
    sa.Column('line2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=2), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auth_throttles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=254), nullable=True),
    sa.Column('ip_address', sa.String(length=64), nullable=True),
    sa.Column('device_id', sa.String(length=64), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('window_started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_attempt_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('auth_throttles', schema=None) as batch_op:
        batch_op.create_index('ix_auth_throttle_lookup', ['user_id', 'email', 'ip_address', 'device_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_auth_throttles_device_id'), ['device_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_auth_throttles_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_auth_throttles_ip_address'), ['ip_address'], unique=False)
        batch_op.create_index(batch_op.f('ix_auth_throttles_locked_until'), ['locked_until'], unique=False)
        batch_op.create_index(batch_op.f('ix_auth_throttles_user_id'), ['user_id'], unique=False)

    op.create_table('carts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.String(length=64), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('carts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_carts_session_id'), ['session_id'], unique=False)

    op.create_table('inventory_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('sku', sa.String(length=64), nullable=True),
    sa.Column('base_unit_id', sa.Integer(), nullable=False),
    sa.Column('par_level', sa.Float(), nullable=True),
    sa.Column('allergens', sa.String(length=160), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['base_unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('sku')
    )
    op.create_table('menu_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('tax_class', sa.String(length=32), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_menu_items_name'), ['name'], unique=False)

    op.create_table('modifier_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('price_delta', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['modifier_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('channel', sa.String(length=16), nullable=True),
    sa.Column('fulfillment', sa.String(length=16), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('tax_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('discount_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('delivery_fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('tip', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('grand_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('placed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_orders_status'), ['status'], unique=False)

    op.create_table('unit_conversions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_unit_id', sa.Integer(), nullable=False),
    sa.Column('to_unit_id', sa.Integer(), nullable=False),
    sa.Column('factor', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['from_unit_id'], ['units.id'], ),
    sa.ForeignKeyConstraint(['to_unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('from_unit_id', 'to_unit_id', name='uq_unit_pair')
    )
    op.create_table('cart_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cart_id', sa.Integer(), nullable=False),
    sa.Column('menu_item_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('notes', sa.String(length=300), nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], ),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('qty', sa.Float(), nullable=False),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('received_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('lot_code', sa.String(length=64), nullable=True),
    sa.CheckConstraint('qty >= 0', name='ck_batch_qty_nonneg'),
    sa.CheckConstraint('unit_cost >= 0', name='ck_batch_unit_cost_nonneg'),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inventory_batches', schema=None) as batch_op:
        batch_op.create_index('ix_batches_item_exp', ['inventory_item_id', 'expiration_date'], unique=False)

    op.create_table('menu_item_modifier_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('menu_item_id', sa.Integer(), nullable=False),
    sa.Column('modifier_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], ),
    sa.ForeignKeyConstraint(['modifier_group_id'], ['modifier_groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('menu_item_id', 'modifier_group_id', name='uq_item_group')
    )
    op.create_table('order_deliveries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('recipient_name', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=40), nullable=True),
    sa.Column('address_snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('eta', sa.DateTime(timezone=True), nullable=True),
    sa.Column('fee', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id')
    )
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('menu_item_name', sa.String(length=160), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('line_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('notes', sa.String(length=300), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=32), nullable=True),
    sa.Column('reference', sa.String(length=120), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('raw_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payments_reference'), ['reference'], unique=False)

    op.create_table('receipts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id')
    )
    op.create_table('recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('menu_item_id', sa.Integer(), nullable=False),
    sa.Column('yield_qty', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('menu_item_id')
    )
    op.create_table('stock_movements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('qty_change', sa.Float(), nullable=False),
    sa.Column('reason', sa.String(length=32), nullable=False),
    sa.Column('reference_type', sa.String(length=32), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('occurred_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('stock_movements', schema=None) as batch_op:
        batch_op.create_index('ix_stock_item_time', ['inventory_item_id', 'occurred_at'], unique=False)

    op.create_table('cart_item_modifiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cart_item_id', sa.Integer(), nullable=False),
    sa.Column('modifier_option_id', sa.Integer(), nullable=False),
    sa.Column('price_delta', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['cart_item_id'], ['cart_items.id'], ),
    sa.ForeignKeyConstraint(['modifier_option_id'], ['modifier_options.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_item_modifiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_item_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('price_delta', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['order_item_id'], ['order_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipe_components',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Float(), nullable=False),
    sa.Column('waste_pct', sa.Float(), nullable=True),
    sa.CheckConstraint('qty >= 0', name='ck_recipe_qty_nonneg'),
    sa.CheckConstraint('waste_pct >= 0 AND waste_pct <= 100', name='ck_recipe_waste_pct'),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('recipe_id', 'inventory_item_id', name='uq_recipe_item')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recipe_components')
    op.drop_table('order_item_modifiers')
    op.drop_table('cart_item_modifiers')
    with op.batch_alter_table('stock_movements', schema=None) as batch_op:
        batch_op.drop_index('ix_stock_item_time')

    op.drop_table('stock_movements')
    op.drop_table('recipes')
    op.drop_table('receipts')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payments_reference'))

    op.drop_table('payments')
    op.drop_table('order_items')
    op.drop_table('order_deliveries')
    op.drop_table('menu_item_modifier_groups')
    with op.batch_alter_table('inventory_batches', schema=None) as batch_op:
        batch_op.drop_index('ix_batches_item_exp')

    op.drop_table('inventory_batches')
    op.drop_table('cart_items')
    op.drop_table('unit_conversions')
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orders_status'))

    op.drop_table('orders')
    op.drop_table('modifier_options')
    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_menu_items_name'))

    op.drop_table('menu_items')
    op.drop_table('inventory_items')
    with op.batch_alter_table('carts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_carts_session_id'))

    op.drop_table('carts')
    with op.batch_alter_table('auth_throttles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_auth_throttles_user_id'))
        batch_op.drop_index(batch_op.f('ix_auth_throttles_locked_until'))
        batch_op.drop_index(batch_op.f('ix_auth_throttles_ip_address'))
        batch_op.drop_index(batch_op.f('ix_auth_throttles_email'))
        batch_op.drop_index(batch_op.f('ix_auth_throttles_device_id'))
        batch_op.drop_index('ix_auth_throttle_lookup')

    op.drop_table('auth_throttles')
    op.drop_table('addresses')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_last_login_at'))
        batch_op.drop_index(batch_op.f('ix_users_is_active'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('units')
    op.drop_table('suppliers')
    op.drop_table('modifier_groups')
    op.drop_table('categories')
    # ### end Alembic commands ###
